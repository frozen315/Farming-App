Index: app/src/main/res/values/colors.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"utf-8\"?>\r\n<resources>\r\n    <color name=\"colorPrimary\">#79C551</color>\r\n    <color name=\"colorPrimaryDark\">#654321</color>\r\n<!--    <color name=\"colorPrimaryDark\">#79C551</color>-->\r\n    <color name=\"colorAccent\">#FFF</color>\r\n    <color name=\"white\">#FFFFFF</color>\r\n    <color name=\"greenlite\">#F56ADA23</color>\r\n    <color name=\"secondary\">#E2F2DA</color>\r\n    <color name=\"semiTransparentColor\">#80FFFFFF</color>\r\n    <color name=\"fontColor\">#FF404A3A</color>\r\n    <color name=\"secondary2\">#88d498</color>\r\n    <color name=\"secondary3\">#c6dabf</color>\r\n\r\n\r\n</resources>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/res/values/colors.xml	(revision 05f9cdfda5bd96c5712cd64c5de9a13232cbcb50)
+++ app/src/main/res/values/colors.xml	(date 1616506010395)
@@ -11,6 +11,12 @@
     <color name="fontColor">#FF404A3A</color>
     <color name="secondary2">#88d498</color>
     <color name="secondary3">#c6dabf</color>
-
-
-</resources>
\ No newline at end of file
+<color name="chip">
+    <selector xmlns:android="http://schemas.android.com/apk/res/android">
+        <item android:state_checked="true"
+            android:color="@color/colorPrimary" />
+        <item android:state_checked="false"
+            android:color="@color/secondary" />
+    </selector>
+</color>
+</resources>
Index: app/src/main/java/com/project/farmingapp/view/dashboard/DashboardActivity.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.project.farmingapp.view.dashboard\r\n\r\nimport android.content.Context\r\nimport android.content.Intent\r\nimport androidx.appcompat.app.AppCompatActivity\r\nimport android.os.Bundle\r\nimport android.os.PersistableBundle\r\nimport android.service.autofill.UserData\r\nimport android.util.AttributeSet\r\nimport android.util.Log\r\nimport android.view.Gravity\r\nimport android.view.MenuItem\r\nimport android.view.View\r\nimport android.widget.Toast\r\nimport android.widget.Toolbar\r\nimport androidx.appcompat.app.ActionBarDrawerToggle\r\nimport androidx.appcompat.app.AlertDialog\r\nimport androidx.core.view.GravityCompat\r\nimport androidx.databinding.DataBindingUtil\r\nimport androidx.fragment.app.Fragment\r\nimport androidx.fragment.app.FragmentTransaction\r\nimport androidx.lifecycle.Observer\r\nimport androidx.lifecycle.ViewModelProvider\r\nimport androidx.lifecycle.ViewModelProviders\r\nimport androidx.navigation.NavController\r\nimport androidx.recyclerview.widget.LinearLayoutManager\r\nimport com.bumptech.glide.Glide\r\nimport com.bumptech.glide.Glide.with\r\nimport com.google.android.material.navigation.NavigationView\r\nimport com.google.firebase.auth.FirebaseAuth\r\nimport com.google.firebase.firestore.FirebaseFirestore\r\nimport com.project.farmingapp.R\r\nimport com.project.farmingapp.adapter.CurrentWeatherAdapter\r\nimport com.project.farmingapp.adapter.WeatherAdapter\r\nimport com.project.farmingapp.databinding.ActivityDashboardBinding\r\nimport com.project.farmingapp.model.WeatherApi\r\nimport com.project.farmingapp.model.data.Weather\r\nimport com.project.farmingapp.model.data.WeatherList\r\nimport com.project.farmingapp.model.data.WeatherRootList\r\nimport com.project.farmingapp.view.apmc.ApmcFragment\r\nimport com.project.farmingapp.view.articles.FruitsFragment\r\nimport com.project.farmingapp.view.auth.LoginActivity\r\nimport com.project.farmingapp.view.socialmedia.SocialMediaPostsFragment\r\nimport com.project.farmingapp.view.user.UserFragment\r\nimport com.project.farmingapp.view.weather.WeatherFragment\r\nimport com.project.farmingapp.viewmodel.UserDataViewModel\r\nimport com.project.farmingapp.viewmodel.WeatherViewModel\r\nimport com.squareup.picasso.Picasso\r\nimport com.squareup.picasso.PicassoProvider\r\nimport kotlinx.android.synthetic.main.activity_dashboard.*\r\nimport kotlinx.android.synthetic.main.app_bar_main.*\r\nimport kotlinx.android.synthetic.main.fragment_weather.*\r\nimport kotlinx.android.synthetic.main.nav_header.*\r\nimport kotlinx.android.synthetic.main.nav_header.view.*\r\nimport retrofit2.Call\r\nimport retrofit2.Callback\r\nimport retrofit2.Response\r\nimport retrofit2.Retrofit\r\n\r\nclass DashboardActivity : AppCompatActivity(), NavigationView.OnNavigationItemSelectedListener {\r\n    lateinit var dashboardFragment: dashboardFragment\r\n    lateinit var weatherFragment: WeatherFragment\r\n    lateinit var navController: NavController\r\n    lateinit var toggle: ActionBarDrawerToggle\r\n    lateinit var blankFragment1: WeatherFragment\r\n    lateinit var apmcFragment: ApmcFragment\r\n    lateinit var fruitsFragment: FruitsFragment\r\n    lateinit var userFragment: UserFragment\r\n    lateinit var socialMediaPostFragment: SocialMediaPostsFragment\r\n    private lateinit var viewModel: UserDataViewModel\r\n    val firebaseFireStore = FirebaseFirestore.getInstance()\r\n    val firebaseAuth = FirebaseAuth.getInstance()\r\n    var userName = \"\"\r\n    var data: WeatherRootList? = null\r\n\r\n    override fun onCreate(savedInstanceState: Bundle?) {\r\n        super.onCreate(savedInstanceState)\r\n        setContentView(R.layout.activity_dashboard)\r\n\r\n        val binding: ActivityDashboardBinding = DataBindingUtil.setContentView(this, R.layout.activity_dashboard)\r\n        viewModel = ViewModelProviders.of(this).get(UserDataViewModel::class.java)\r\n        binding.userDataViewModel = viewModel\r\n\r\n\r\n        toggle = ActionBarDrawerToggle(this, drawerLayout, R.string.open, R.string.close)\r\n        drawerLayout.addDrawerListener(toggle)\r\n        toggle.syncState()\r\n\r\n\r\n        viewModel.getUserData(firebaseAuth.currentUser!!.email as String)\r\n\r\n        navView.setNavigationItemSelectedListener(this)\r\n        supportActionBar?.setDisplayHomeAsUpEnabled(true)\r\n\r\n        dashboardFragment = dashboardFragment()\r\n        weatherFragment = WeatherFragment()\r\n        supportFragmentManager\r\n            .beginTransaction()\r\n            .replace(R.id.frame_layout, dashboardFragment, \"userDash\")\r\n            .setTransition(FragmentTransaction.TRANSIT_FRAGMENT_OPEN)\r\n            .setReorderingAllowed(true)\r\n            .addToBackStack(\"userDash\")\r\n            .commit()\r\n\r\n        bottomNav.selectedItemId = R.id.bottomNavHome\r\n\r\n        val something = navView.getHeaderView(0);\r\n\r\n        if (dashboardFragment.isVisible) {\r\n            bottomNav.selectedItemId = R.id.bottomNavHome\r\n        }\r\n\r\n//        val googleLoggedUserName = firebaseAuth.currentUser!!.displayName\r\n//        if (googleLoggedUserName.isNullOrEmpty()) {\r\n//            firebaseFireStore.collection(\"users\").document(firebaseAuth.currentUser!!.email!!)\r\n//                .get()\r\n//                .addOnCompleteListener {\r\n//                    val data = it.result\r\n//                    userName = data!!.getString(\"name\").toString()\r\n//                    something.cityTextNavHeader.text = data!!.getString(\"city\").toString()\r\n//                    something.navbarUserName.text = userName\r\n//                }\r\n//        } else {\r\n//            something.navbarUserName.text = googleLoggedUserName\r\n//        }\r\n\r\n\r\n//        getWeather()\r\n\r\n        something.setOnClickListener {\r\n            Toast.makeText(this, \"You Clicked Slider\", Toast.LENGTH_LONG).show()\r\n\r\n            if (drawerLayout.isDrawerOpen(GravityCompat.START)) {\r\n                drawerLayout.closeDrawer(GravityCompat.START)\r\n            } else {\r\n                super.onBackPressed()\r\n            }\r\n            userFragment = UserFragment()\r\n            setCurrentFragment(userFragment)\r\n        }\r\n        apmcFragment = ApmcFragment()\r\n        socialMediaPostFragment = SocialMediaPostsFragment()\r\n\r\n        bottomNav.setOnNavigationItemSelectedListener {\r\n            when (it.itemId) {\r\n                R.id.bottomNavAPMC -> setCurrentFragment(apmcFragment)\r\n                R.id.bottomNavHome -> setCurrentFragment(dashboardFragment)\r\n                R.id.bottomNavEcomm -> setCurrentFragment(dashboardFragment)\r\n                R.id.bottomNavPost -> setCurrentFragment(socialMediaPostFragment)\r\n            }\r\n            true\r\n        }\r\n\r\n        viewModel.userliveData.observe(this, Observer {\r\n            val something = navView.getHeaderView(0);\r\n            userName = it.get(\"name\").toString()\r\n            something.cityTextNavHeader.text =\"City: \" +  it.get(\"city\").toString()\r\n            something.navbarUserName.text = userName\r\n            something.navbarUserEmail.text = firebaseAuth.currentUser!!.email\r\n            Glide.with(this).load(it.get(\"profileImage\")).into(something.navbarUserImage)\r\n            Log.d(\"User Data from VM\", it.getString(\"name\"))\r\n            val posts = it.get(\"posts\") as List<String>\r\n\r\n            something.navBarUserPostCount.text = \"Posts Count: \" + posts.size.toString()\r\n        })\r\n    }\r\n\r\n    override fun onOptionsItemSelected(item: MenuItem): Boolean {\r\n        if (toggle.onOptionsItemSelected(item)) {\r\n            return true\r\n        }\r\n        return super.onOptionsItemSelected(item)\r\n    }\r\n\r\n    private fun setCurrentFragment(fragment: Fragment) {\r\n        supportFragmentManager.beginTransaction().apply {\r\n            replace(R.id.frame_layout, fragment)\r\n\r\n            setTransition(FragmentTransaction.TRANSIT_FRAGMENT_OPEN)\r\n            setReorderingAllowed(true)\r\n            addToBackStack(\"name\")\r\n            commit()\r\n        }\r\n    }\r\n\r\n\r\n    override fun onPostCreate(savedInstanceState: Bundle?, persistentState: PersistableBundle?) {\r\n        super.onPostCreate(savedInstanceState, persistentState)\r\n        toggle.syncState()\r\n    }\r\n\r\n    override fun onNavigationItemSelected(item: MenuItem): Boolean {\r\n        bottomNav.selectedItemId = R.id.bottomNavHome\r\n        when (item.itemId) {\r\n\r\n            R.id.miItem1 -> {\r\n                if (supportFragmentManager.findFragmentByTag(\"name\") == null) {\r\n                    fruitsFragment = FruitsFragment()\r\n                    supportFragmentManager\r\n                        .beginTransaction()\r\n                        .replace(R.id.frame_layout, fruitsFragment, \"article\")\r\n                        .setTransition(FragmentTransaction.TRANSIT_FRAGMENT_OPEN)\r\n                        .setReorderingAllowed(true)\r\n                        .addToBackStack(\"article\")\r\n                        .commit()\r\n                }\r\n            }\r\n\r\n            R.id.miItem4 -> {\r\n                if (supportFragmentManager.findFragmentByTag(\"name\") == null) {\r\n                    apmcFragment = ApmcFragment()\r\n                    bottomNav.selectedItemId = R.id.bottomNavAPMC\r\n                    supportFragmentManager\r\n                        .beginTransaction()\r\n                        .replace(R.id.frame_layout, apmcFragment, \"name1\")\r\n                        .setTransition(FragmentTransaction.TRANSIT_FRAGMENT_OPEN)\r\n                        .setReorderingAllowed(true)\r\n                        .addToBackStack(\"name\")\r\n                        .commit()\r\n                }\r\n            }\r\n            R.id.miItem8 -> {\r\n                val builder = AlertDialog.Builder(this)\r\n                builder.setTitle(\"Log Out\")\r\n                    .setMessage(\"Do you want to logout?\")\r\n                    .setPositiveButton(\"Yes\") { dialogInterface, i ->\r\n                        firebaseAuth.signOut()\r\n                        Toast.makeText(this, \"Logged Out\", Toast.LENGTH_LONG).show()\r\n                        Intent(this, LoginActivity::class.java).also {\r\n                            startActivity(it)\r\n                        }\r\n                    }\r\n                    .setNegativeButton(\"No\") { dialogInterface, i ->\r\n                    }\r\n                    .show()\r\n            }\r\n            R.id.miItem7 -> {\r\n\r\n            }\r\n        }\r\n        drawerLayout.closeDrawer(GravityCompat.START)\r\n        return true\r\n    }\r\n\r\n    override fun onBackPressed() {\r\n        if (dashboardFragment.isVisible) {\r\n//            Toast.makeText(this, \"A\", Toast.LENGTH_LONG).show()\r\n//            bottomNav.selectedItemId = R.id.bottomNavHome\r\n        }\r\n\r\n        if (drawerLayout.isDrawerOpen(GravityCompat.START)) {\r\n            drawerLayout.closeDrawer(GravityCompat.START)\r\n        } else {\r\n            super.onBackPressed()\r\n        }\r\n    }\r\n\r\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/com/project/farmingapp/view/dashboard/DashboardActivity.kt	(revision 05f9cdfda5bd96c5712cd64c5de9a13232cbcb50)
+++ app/src/main/java/com/project/farmingapp/view/dashboard/DashboardActivity.kt	(date 1616506010437)
@@ -40,6 +40,7 @@
 import com.project.farmingapp.view.apmc.ApmcFragment
 import com.project.farmingapp.view.articles.FruitsFragment
 import com.project.farmingapp.view.auth.LoginActivity
+import com.project.farmingapp.view.ecommerce.EcommerceFragment
 import com.project.farmingapp.view.socialmedia.SocialMediaPostsFragment
 import com.project.farmingapp.view.user.UserFragment
 import com.project.farmingapp.view.weather.WeatherFragment
@@ -59,6 +60,7 @@
 
 class DashboardActivity : AppCompatActivity(), NavigationView.OnNavigationItemSelectedListener {
     lateinit var dashboardFragment: dashboardFragment
+    lateinit var ecommerceFragment: EcommerceFragment
     lateinit var weatherFragment: WeatherFragment
     lateinit var navController: NavController
     lateinit var toggle: ActionBarDrawerToggle
@@ -140,12 +142,13 @@
         }
         apmcFragment = ApmcFragment()
         socialMediaPostFragment = SocialMediaPostsFragment()
+        ecommerceFragment=EcommerceFragment()
 
         bottomNav.setOnNavigationItemSelectedListener {
             when (it.itemId) {
                 R.id.bottomNavAPMC -> setCurrentFragment(apmcFragment)
                 R.id.bottomNavHome -> setCurrentFragment(dashboardFragment)
-                R.id.bottomNavEcomm -> setCurrentFragment(dashboardFragment)
+                R.id.bottomNavEcomm -> setCurrentFragment(ecommerceFragment)
                 R.id.bottomNavPost -> setCurrentFragment(socialMediaPostFragment)
             }
             true
Index: app/src/main/res/layout/fragment_ecommerce.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/res/layout/fragment_ecommerce.xml	(date 1616506010422)
+++ app/src/main/res/layout/fragment_ecommerce.xml	(date 1616506010422)
@@ -0,0 +1,131 @@
+<?xml version="1.0" encoding="utf-8"?>
+<FrameLayout xmlns:android="http://schemas.android.com/apk/res/android"
+    xmlns:tools="http://schemas.android.com/tools"
+    android:layout_width="match_parent"
+    android:layout_height="match_parent"
+    xmlns:app="http://schemas.android.com/apk/res-auto"
+    tools:context=".view.ecommerce.EcommerceFragment">
+
+
+  <androidx.constraintlayout.widget.ConstraintLayout
+      android:layout_width="match_parent"
+      android:layout_height="match_parent">
+      <HorizontalScrollView
+          android:scrollbars="none"
+          android:scrollbarStyle="insideOverlay"
+          android:id="@+id/scroll1"
+          app:layout_constraintStart_toStartOf="parent"
+          app:layout_constraintTop_toTopOf="parent"
+          android:layout_width="match_parent"
+          android:layout_height="wrap_content">
+
+<com.google.android.material.chip.ChipGroup
+android:layout_marginVertical="7dp"
+    app:layout_constraintTop_toTopOf="parent"
+    app:layout_constraintStart_toStartOf="parent"
+    app:layout_constraintEnd_toEndOf="parent"
+    android:id="@+id/chipgrp"
+    android:layout_width="wrap_content"
+    android:layout_height="wrap_content"
+    android:gravity="center_vertical"
+    android:orientation="horizontal"
+    app:chipSpacing="10dp"
+    app:singleSelection="true"
+    app:checkedChip="@id/chip1"
+    app:itemSpacing="15dp"
+    app:singleLine="true">
+
+
+
+
+
+
+    <com.google.android.material.chip.Chip
+        app:chipBackgroundColor="@color/chip_bg_states"
+        android:id="@+id/chip1"
+        style="@style/Widget.MaterialComponents.Chip.Filter"
+        android:layout_width="wrap_content"
+        android:layout_height="wrap_content"
+android:layout_marginLeft="12dp"
+        android:text="ALL"
+        android:textColor="@color/fontColor"
+
+
+         />
+
+    <com.google.android.material.chip.Chip
+
+        android:id="@+id/chip2"
+        style="@style/Widget.MaterialComponents.Chip.Filter"
+        android:layout_width="wrap_content"
+        android:layout_height="wrap_content"
+
+        android:text="FERTILIZER"
+        android:textColor="@color/fontColor"
+
+        app:chipBackgroundColor="@color/chip_bg_states"
+        />
+    <com.google.android.material.chip.Chip
+        android:id="@+id/chip3"
+        style="@style/Widget.MaterialComponents.Chip.Filter"
+        android:layout_width="wrap_content"
+        android:layout_height="wrap_content"
+
+        android:text="PESTISIDE"
+        android:textColor="@color/fontColor"
+
+        app:chipBackgroundColor="@color/chip_bg_states"
+        />
+    <com.google.android.material.chip.Chip
+        android:id="@+id/chip4"
+        style="@style/Widget.MaterialComponents.Chip.Filter"
+        android:layout_width="wrap_content"
+        android:layout_height="wrap_content"
+
+        android:text="MACHINE"
+        android:textColor="@color/fontColor"
+
+        app:chipBackgroundColor="@color/chip_bg_states"
+        />
+    <com.google.android.material.chip.Chip
+        android:id="@+id/chip5"
+        style="@style/Widget.MaterialComponents.Chip.Filter"
+        android:layout_width="wrap_content"
+        android:layout_height="wrap_content"
+
+        android:text="SEED"
+        android:textColor="@color/fontColor"
+
+        app:chipBackgroundColor="@color/chip_bg_states"
+        />
+    <com.google.android.material.chip.Chip
+        android:id="@+id/chip6"
+        style="@style/Widget.MaterialComponents.Chip.Filter"
+        android:layout_width="wrap_content"
+        android:layout_height="wrap_content"
+
+        android:text="@string/app_name"
+        android:textColor="@color/fontColor"
+
+        app:chipBackgroundColor="@color/chip_bg_states"
+        />
+
+
+
+
+
+</com.google.android.material.chip.ChipGroup>
+      </HorizontalScrollView>
+
+
+      <androidx.recyclerview.widget.RecyclerView
+          android:id="@+id/ecommrcyclr"
+          android:layout_width="match_parent"
+          android:layout_height="wrap_content"
+tools:listitem="@layout/single_ecomm_item"
+          app:layout_constraintStart_toStartOf="parent"
+          app:layout_constraintTop_toBottomOf="@+id/scroll1" />
+
+  </androidx.constraintlayout.widget.ConstraintLayout>
+
+</FrameLayout>
\ No newline at end of file
Index: app/src/main/res/layout/single_ecomm_item.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/res/layout/single_ecomm_item.xml	(date 1616506010457)
+++ app/src/main/res/layout/single_ecomm_item.xml	(date 1616506010457)
@@ -0,0 +1,108 @@
+<?xml version="1.0" encoding="utf-8"?>
+<androidx.constraintlayout.widget.ConstraintLayout
+  android:padding="5dp"
+
+    xmlns:android="http://schemas.android.com/apk/res/android"
+    xmlns:app="http://schemas.android.com/apk/res-auto"
+    android:layout_width="match_parent"
+    android:layout_height="wrap_content"
+
+    >
+
+    <androidx.cardview.widget.CardView
+        android:id="@+id/ecommCard"
+        android:layout_width="match_parent"
+        android:layout_height="wrap_content"
+        android:layout_marginHorizontal="7dp"
+        android:layout_marginVertical="7dp"
+        android:background="@drawable/ecommborder"
+        app:cardElevation="7dp"
+        app:layout_constraintBottom_toBottomOf="parent"
+        app:layout_constraintStart_toStartOf="parent"
+        app:layout_constraintTop_toTopOf="parent">
+
+        <androidx.constraintlayout.widget.ConstraintLayout
+            android:layout_width="match_parent"
+
+            android:layout_height="wrap_content">
+
+            <ImageView
+
+                android:id="@+id/ecommImage"
+                android:layout_width="120dp"
+                android:layout_height="120dp"
+                android:padding="5dp"
+                android:src="@color/colorPrimary"
+                app:layout_constraintBottom_toBottomOf="parent"
+                app:layout_constraintStart_toStartOf="parent"
+                app:layout_constraintTop_toTopOf="parent" />
+
+            <TextView
+                android:id="@+id/ecommtitle"
+                app:layout_constraintBottom_toTopOf="@id/ecommPrice"
+                android:layout_width="250dp"
+                android:layout_height="wrap_content"
+                android:layout_marginLeft="10dp"
+                android:layout_marginTop="5dp"
+                android:text="Greatindos Premium Quality GRADE A NPK, Hydroponic Fertilizer"
+                app:layout_constraintStart_toEndOf="@id/ecommImage"
+                app:layout_constraintTop_toTopOf="parent" />
+
+            <TextView
+                android:id="@+id/ecommPrice"
+                android:layout_width="150dp"
+                android:layout_height="wrap_content"
+                android:layout_marginLeft="10dp"
+                android:layout_marginTop="5dp"
+                android:text="$50"
+                android:textColor="@color/colorPrimary"
+                android:textSize="24dp"
+                android:textStyle="bold"
+                app:layout_constraintStart_toEndOf="@id/ecommImage"
+                app:layout_constraintBottom_toTopOf="@id/ecommRating"
+                app:layout_constraintTop_toBottomOf="@id/ecommtitle" />
+
+            <RatingBar
+                android:id="@+id/ecommRating"
+                style="@style/Widget.AppCompat.RatingBar.Small"
+                android:layout_width="wrap_content"
+                android:layout_height="wrap_content"
+                android:layout_marginLeft="10dp"
+                android:layout_marginTop="5dp"
+                android:rating="3"
+                android:theme="@style/RatingBar"
+                app:layout_constraintBottom_toTopOf="@id/ecommretailer"
+                app:layout_constraintStart_toEndOf="@id/ecommImage"
+                app:layout_constraintTop_toBottomOf="@id/ecommPrice" />
+
+            <TextView
+                android:id="@+id/ecommretailer"
+                android:layout_width="wrap_content"
+                android:layout_height="wrap_content"
+                android:layout_marginLeft="10dp"
+                android:layout_marginTop="5dp"
+                android:text="india pvt ltd"
+                android:layout_marginBottom="3.5dp"
+                android:textSize="10sp"
+                android:textStyle="italic"
+                app:layout_constraintStart_toEndOf="@id/ecommImage"
+                app:layout_constraintBottom_toBottomOf="parent"
+                app:layout_constraintTop_toBottomOf="@id/ecommRating" />
+
+            <TextView
+                android:id="@+id/ecommstock"
+                android:layout_width="wrap_content"
+                android:layout_height="wrap_content"
+
+
+                android:text="In Stock"
+                android:textStyle="bold"
+                app:layout_constraintBottom_toBottomOf="parent"
+                app:layout_constraintEnd_toEndOf="parent"
+                 />
+        </androidx.constraintlayout.widget.ConstraintLayout>
+    </androidx.cardview.widget.CardView>
+</androidx.constraintlayout.widget.ConstraintLayout>
+
+
+
Index: app/src/main/java/com/project/farmingapp/view/ecommerce/EcommerceFragment.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/com/project/farmingapp/view/ecommerce/EcommerceFragment.kt	(date 1616506010449)
+++ app/src/main/java/com/project/farmingapp/view/ecommerce/EcommerceFragment.kt	(date 1616506010449)
@@ -0,0 +1,128 @@
+package com.project.farmingapp.view.ecommerce
+
+import android.os.Bundle
+import android.util.Log
+import androidx.fragment.app.Fragment
+import android.view.LayoutInflater
+import android.view.View
+import android.view.ViewGroup
+import android.widget.Toast
+import androidx.lifecycle.Observer
+import androidx.lifecycle.ViewModelProviders
+import androidx.recyclerview.widget.LinearLayoutManager
+import com.google.android.material.chip.ChipGroup
+import com.google.firebase.firestore.FirebaseFirestore
+import com.google.firebase.firestore.Query
+import com.project.farmingapp.R
+import com.project.farmingapp.adapter.EcommerceAdapter
+import com.project.farmingapp.viewmodel.EcommViewModel
+
+
+import kotlinx.android.synthetic.main.fragment_ecommerce.*
+
+
+// TODO: Rename parameter arguments, choose names that match
+// the fragment initialization parameters, e.g. ARG_ITEM_NUMBER
+private const val ARG_PARAM1 = "param1"
+private const val ARG_PARAM2 = "param2"
+
+/**
+ * A simple [Fragment] subclass.
+ * Use the [EcommerceFragment.newInstance] factory method to
+ * create an instance of this fragment.
+ */
+
+class EcommerceFragment : Fragment() {
+    private lateinit var viewmodel: EcommViewModel
+    private var adapter : EcommerceAdapter? = null
+    // TODO: Rename and change types of parameters
+    private var param1: String? = null
+    private var param2: String? = null
+
+    override fun onCreate(savedInstanceState: Bundle?) {
+        super.onCreate(savedInstanceState)
+        arguments?.let {
+            param1 = it.getString(ARG_PARAM1)
+            param2 = it.getString(ARG_PARAM2)
+
+            viewmodel = ViewModelProviders.of(requireActivity())
+                .get<EcommViewModel>(EcommViewModel::class.java)
+
+//            viewmodel = ViewModelProviders.of(requireActivity())
+//                .get<EcommViewModel>(EcommViewModel::class.java)
+
+            viewmodel.loadAllEcommItems()
+        }
+    }
+
+    override fun onCreateView(
+        inflater: LayoutInflater, container: ViewGroup?,
+        savedInstanceState: Bundle?
+    ): View? {
+        // Inflate the layout for this fragment
+        viewmodel = ViewModelProviders.of(requireActivity())
+            .get<EcommViewModel>(EcommViewModel::class.java)
+        viewmodel.ecommLiveData.observe(viewLifecycleOwner, Observer {
+            adapter = EcommerceAdapter(activity!!.applicationContext, it)
+            Log.d("ecommFragment ", it.toString())
+            ecommrcyclr.adapter = adapter
+            ecommrcyclr.layoutManager = LinearLayoutManager(activity!!.applicationContext)
+        })
+        return inflater.inflate(R.layout.fragment_ecommerce, container, false)
+    }
+
+    override fun onViewCreated(view: View, savedInstanceState: Bundle?) {
+        super.onViewCreated(view, savedInstanceState)
+        viewmodel.loadAllEcommItems()
+
+        chipgrp.setOnCheckedChangeListener { group, checkedId ->
+
+when(checkedId){
+    R.id.chip1 -> {
+        viewmodel.loadAllEcommItems()
+
+        Toast.makeText(context,"toast clicked1",Toast.LENGTH_LONG).show()
+
+    }
+    R.id.chip2 -> { Toast.makeText(context,"toast clicked2",Toast.LENGTH_LONG).show()
+        viewmodel.loadSpecificTypeEcomItem("fertilizer")}
+}
+
+        }
+
+
+    }
+    fun getProductData() {
+        val firebaseFirestore: FirebaseFirestore = FirebaseFirestore.getInstance()
+
+
+        firebaseFirestore.collection("products").get()
+            .addOnSuccessListener {
+                Log.d("Posts data", it.documents[0].getString("title").toString())
+
+            }
+            .addOnFailureListener {
+
+            }
+    }
+
+    companion object {
+        /**
+         * Use this factory method to create a new instance of
+         * this fragment using the provided parameters.
+         *
+         * @param param1 Parameter 1.
+         * @param param2 Parameter 2.
+         * @return A new instance of fragment EcommerceFragment.
+         */
+        // TODO: Rename and change types and number of parameters
+        @JvmStatic
+        fun newInstance(param1: String, param2: String) =
+            EcommerceFragment().apply {
+                arguments = Bundle().apply {
+                    putString(ARG_PARAM1, param1)
+                    putString(ARG_PARAM2, param2)
+                }
+            }
+    }
+}
\ No newline at end of file
